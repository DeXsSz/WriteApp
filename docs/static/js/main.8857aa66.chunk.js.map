{"version":3,"sources":["components/TodoAdd.jsx","hooks/useForm.js","components/TodoListItem.jsx","components/TodoList.jsx","components/todoReducer.js","TodoApp.jsx","App.js","index.js"],"names":["TodoAdd","handleAdd","initalState","useState","state","setState","target","name","value","useForm","task","handleInputChange","reset","className","onSubmit","e","preventDefault","newTodo","id","Date","getTime","done","type","placeholder","onChange","autoComplete","TodoListItem","handleDelete","handleToggle","onClick","TodoList","todos","map","todo","todoReducer","action","payload","filter","init","local","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAoCeA,EAhCC,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACd,ECJmB,WAAuB,IAAtBC,EAAqB,uDAAP,GAClC,EAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAUA,MAAO,CAACD,EANkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACzBD,EAAS,2BACFD,GADC,kBAEHE,EAAOC,KAAOD,EAAOE,UANhB,WACVH,EAASH,KDCgCO,CAAQ,CACjDC,KAAM,KADV,mBAASA,EAAT,KAASA,KAAQC,EAAjB,KAAoCC,EAApC,KAcA,OACI,qBAAKC,UAAU,aAAf,SACI,sBAAMC,SAbO,SAAAC,GACjBA,EAAEC,iBAEF,IAAMC,EAAU,CACZC,IAAI,IAAIC,MAAOC,UACfV,KAAMA,EACNW,MAAM,GAEVpB,EAAUgB,GACVL,KAII,SACI,uBACIU,KAAK,OACLT,UAAU,oBACVU,YAAY,sBACZhB,KAAK,OACLiB,SAAUb,EACVH,MAAOE,EACPe,aAAa,aENlBC,G,YArBM,SAAC,GAAkD,IAAjDR,EAAgD,EAAhDA,GAAIR,EAA4C,EAA5CA,KAAMW,EAAsC,EAAtCA,KAAMM,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAEjD,OACI,sBAAKf,UAAU,YAAf,UAEI,mBAAGA,UAAS,0BAAqBQ,EAAM,WAAY,IAAMQ,QAAS,kBAAID,EAAaV,IAAnF,SAAyFR,IAWzF,wBAAQG,UAAU,MAAMgB,QAAS,kBAAIF,EAAaT,IAAlD,2BCCGY,EAfE,SAAC,GAAoD,IAAnD7B,EAAkD,EAAlDA,UAAW8B,EAAuC,EAAvCA,MAAOJ,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC/C,OACI,qCAEQG,EAAMC,KAAI,SAAAC,GACN,OAAQ,cAAC,EAAD,2BAAgCA,GAAhC,IAAsCN,aAAcA,EAAcC,aAAcA,IAA7DK,EAAKf,OAKxC,cAAC,EAAD,CAASjB,UAAWA,Q,OCPnBiC,EAAc,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAI+B,EAAW,uCAC/C,OAAQA,EAAOb,MACX,IAAK,MACD,MAAM,GAAN,mBAAWlB,GAAX,CAAkB+B,EAAOC,UAC7B,IAAK,SACD,OAAOhC,EAAMiC,QAAO,SAAAJ,GAAI,OAAIA,EAAKf,KAAOiB,EAAOC,WACnD,IAAK,SACD,OAAOhC,EAAM4B,KAAI,SAAAC,GACb,OAAIA,EAAKf,KAAOiB,EAAOC,QACZ,2BACAH,GADP,IAEIZ,MAAOY,EAAKZ,OAGTY,KAGnB,QACI,OAAO7B,ICtBbkC,EAAO,WACT,IAKMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAC9C,OAAGJ,GANa,CAAC,CACTrB,GAAI,IACJR,KAAM,WACNW,MAAM,KAwCHuB,EA/BC,WACZ,MAA0BC,qBAAWX,EAAa,GAAII,GAAtD,mBAAOP,EAAP,KAAce,EAAd,KAEAC,qBAAU,WACNL,aAAaM,QAAQ,QAASR,KAAKS,UAAUlB,MAC/C,CAACA,IAmBH,OACI,qBAAKlB,UAAU,YAAf,SACI,cAAC,EAAD,CAAUZ,UApBA,SAACgB,GACf6B,EAAS,CACLxB,KAAM,MACNc,QAASnB,KAiBuBc,MAAOA,EAAOJ,aAdjC,SAACuB,GAClBJ,EAAS,CACLxB,KAAM,SACNc,QAASc,KAWiEtB,aAR7D,SAACsB,GAClBJ,EAAS,CACLxB,KAAM,SACNc,QAASc,UC9BNC,EAJH,WACR,OAAO,cAAC,EAAD,K,MCAXC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.8857aa66.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useForm } from '../hooks/useForm';\r\nimport './TodoAdd.css';\r\n\r\nconst TodoAdd = ({handleAdd}) => {\r\n    const [{ task }, handleInputChange, reset] = useForm({\r\n        task: '',\r\n    });\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            task: task,\r\n            done: false,\r\n        };\r\n        handleAdd(newTodo)\r\n        reset();\r\n    };\r\n    return (\r\n        <div className=\"write-task\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"write-task__input\"\r\n                    placeholder=\"Write a new task...\"\r\n                    name=\"task\"\r\n                    onChange={handleInputChange}\r\n                    value={task}\r\n                    autoComplete='off'\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoAdd;\r\n","import { useState } from 'react';\r\nexport const useForm = (initalState = '') => {\r\n    const [state, setState] = useState(initalState);\r\n    const reset = () => {\r\n        setState(initalState);\r\n    };\r\n    const handleInputChange = ({ target }) => {\r\n        setState({\r\n            ...state,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n    return [state, handleInputChange, reset];\r\n};\r\n","import React from 'react';\r\nimport './TodoListItem.css';\r\nconst TodoListItem = ({id, task, done, handleDelete, handleToggle}) => {\r\n\r\n    return (\r\n        <div className=\"list-item\">\r\n            {/* <input ref={check} type=\"checkbox\" className=\"list-item__input--checkbox\" /> */}\r\n            <p className={`list-item__text ${done? 'complete': ''}`} onClick={()=>handleToggle(id)}>{task}</p>\r\n            \r\n            {/* <select name=\"selected\" id=\"\">\r\n                <option value=\"undefined\" defaultValue>\r\n                    ----\r\n                </option>\r\n                <option value=\"work\">Work</option>\r\n                <option value=\"school\">School</option>\r\n                <option value=\"home\">Home</option>\r\n            </select> */}\r\n\r\n            <button className=\"btn\" onClick={()=>handleDelete(id)}>Eliminar</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from 'react'\r\nimport TodoAdd from './TodoAdd'\r\nimport './TodoList.css'\r\nimport TodoListItem from './TodoListItem'\r\nconst TodoList = ({handleAdd, todos, handleDelete, handleToggle}) => {\r\n    return (\r\n        <>\r\n            {\r\n                todos.map(todo=>{\r\n                    return  <TodoListItem key={todo.id} {...todo} handleDelete={handleDelete} handleToggle={handleToggle}/>\r\n                })\r\n            }\r\n            \r\n\r\n            <TodoAdd handleAdd={handleAdd} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","// const initalState = [\r\n//     {\r\n//         id: new Date().getTime(),\r\n//         task: 'Aprender React',\r\n//         done: false,\r\n//     },\r\n// ];\r\nexport const todoReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n        case 'toggle':\r\n            return state.map(todo => {\r\n                if (todo.id === action.payload) {\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done,\r\n                    };\r\n                } else {\r\n                    return todo;\r\n                }\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, {useEffect, useReducer} from 'react'\r\nimport TodoList from './components/TodoList'\r\nimport {todoReducer} from './components/todoReducer'\r\nconst init = () => {\r\n    const initial = [{\r\n            id: 123,\r\n            task: 'WriteApp',\r\n            done: false\r\n    }]\r\n    const local = JSON.parse(localStorage.getItem('todos'))\r\n    if(local){\r\n        return local\r\n    }else{\r\n        return initial\r\n    }\r\n};\r\nconst TodoApp = () => {\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n    \r\n    useEffect(()=>{\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    },[todos])\r\n    const handleAdd = (newTodo)=>{\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        })\r\n    }\r\n    const handleDelete = (todoId)=>{\r\n        dispatch({\r\n            type: 'delete',\r\n            payload: todoId\r\n        })\r\n    }\r\n    const handleToggle = (todoId)=>{\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <TodoList handleAdd={handleAdd} todos={todos} handleDelete={handleDelete} handleToggle={handleToggle}/> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoApp\r\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nconst App = () => {\n    return <TodoApp />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}